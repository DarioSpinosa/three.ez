"use strict";(self.webpackChunkthree_ez_doc=self.webpackChunkthree_ez_doc||[]).push([[871],{4137:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,g=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(g,l(l({ref:t},c),{},{components:n})):a.createElement(g,l({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[d]="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7347:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var a=n(7462),r=(n(7294),n(4137));const o={sidebar_position:2},l="Update Events",i={unversionedId:"tutorial/events/update-events",id:"tutorial/events/update-events",title:"Update Events",description:"Update events are triggered when the value of a property or a state changes.",source:"@site/docs/tutorial/events/update-events.md",sourceDirName:"tutorial/events",slug:"/tutorial/events/update-events",permalink:"/three.ez/docs/tutorial/events/update-events",draft:!1,editUrl:"https://github.com/agargaro/three.ez/tree/master/docs/docs/tutorial/events/update-events.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Miscellaneous Events",permalink:"/three.ez/docs/tutorial/events/misc-events"},next:{title:"TODO",permalink:"/three.ez/docs/tutorial/focus-management/todo"}},p={},s=[{value:"Example",id:"example",level:2}],c={toc:s},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"update-events"},"Update Events"),(0,r.kt)("p",null,"Update events are triggered when the value of a property or a state changes. ",(0,r.kt)("br",null),"\nIt's important to note that unlike ",(0,r.kt)("inlineCode",{parentName:"p"},"interaction events"),", update events do not follow a propagation system."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Event"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Parameters"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"positionchange")),(0,r.kt)("td",{parentName:"tr",align:null},"Triggered when the object's ",(0,r.kt)("inlineCode",{parentName:"td"},"position")," changes."),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"scalechange")),(0,r.kt)("td",{parentName:"tr",align:null},"Triggered when the object's ",(0,r.kt)("inlineCode",{parentName:"td"},"scale")," changes."),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"rotationchange")),(0,r.kt)("td",{parentName:"tr",align:null},"Triggered when the object's ",(0,r.kt)("inlineCode",{parentName:"td"},"rotation")," changes."),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"enabledchange")),(0,r.kt)("td",{parentName:"tr",align:null},"Triggered when the object's enabled state changes (either its own or the parent's ",(0,r.kt)("inlineCode",{parentName:"td"},"enabled")," property)."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"../../api/interfaces/Events.PropertyChangeEvent"},"PropertyChangeEvent"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"visiblechange")),(0,r.kt)("td",{parentName:"tr",align:null},"Triggered when the object's visibility changes (either its own or the parent's ",(0,r.kt)("inlineCode",{parentName:"td"},"visible")," property)."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"../../api/interfaces/Events.PropertyChangeEvent"},"PropertyChangeEvent"))))),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const box = new Mesh(new BoxGeometry(), new MeshLambertMaterial());\n\nbox.on('positionchange', () => console.log('position changed'));\n\nbox.on('scalechange', () => console.log('scale changed'));\n\nbox.on('rotationchange', () => console.log('rotation changed'));\n\nbox.on('enabledchange', (e) => {\n    console.log(`enabled state changed. Parent: ${e.target.name}, value: ${e.value}`)\n});\n\nbox.on('visiblechange', (e) => {\n    console.log(`visibility state changed. Parent: ${e.target.name}, value: ${e.value}`)\n});\n")))}u.isMDXComponent=!0}}]);